import config
import telebot
import json
import shelve_tool
from SQLighter import SQLighter
from telebot import types
bot = telebot.TeleBot(config.token)
db = SQLighter(config.database_name)


@bot.message_handler(commands=['start'])
def menu(message):
    if db.exists_user(message.chat.id):
        pass
    else:
        shelve_tool.set_shelve("mode.db", str(message.chat.id), 1)
        bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª.")


@bot.message_handler(content_types=['text'])
def work(message):
    if shelve_tool.get_shelve("mode.db", str(message.chat.id)) == 1:
        if message.text in config.subjects:
            if shelve_tool.exist_shelve("Subjects.db", str(message.chat.id)):
                if message.text not in shelve_tool.get_shelve("Subjects.db", str(message.chat.id)):
                    shelve_tool.set_shelve("Subjects.db", str(message.chat.id), shelve_tool.get_shelve("Subjects.db",
                                           str(message.chat.id)) + ", " + message.text)
            else:
                shelve_tool.set_shelve("Subjects.db", str(message.chat.id), message.text)
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            for j in range(0, len(config.subjects) - 1, 2):
                markup.row(config.subjects[j], config.subjects[j + 1])
            markup.row(config.subjects[-1])
            markup.add("–î–∞–ª–µ–µ")
            bot.send_message(message.chat.id, "–ï—Å–ª–∏ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –Ω—É–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –î–∞–ª–µ–µ", reply_markup=markup)
        elif message.text in ["1 —É—Ä–æ–≤–µ–Ω—å", "3 —É—Ä–æ–≤–µ–Ω—å", "2 —É—Ä–æ–≤–µ–Ω—å", "–í–°–û–®"]:
            if shelve_tool.exist_shelve("Levels.db", str(message.chat.id)):
                if message.text not in shelve_tool.get_shelve("Levels.db", str(message.chat.id)):
                    shelve_tool.set_shelve("Levels.db", str(message.chat.id), shelve_tool.get_shelve("Levels.db",
                                           str(message.chat.id)) + ", " + message.text)
            else:
                shelve_tool.set_shelve("Levels.db", str(message.chat.id), message.text)
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.row("1 —É—Ä–æ–≤–µ–Ω—å", "2 —É—Ä–æ–≤–µ–Ω—å", "3 —É—Ä–æ–≤–µ–Ω—å")
            markup.add("–í–°–û–®")
            markup.add("–î–∞–ª–µ–µ")
            bot.send_message(message.chat.id, "–ï—Å–ª–∏ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –Ω—É–∂–Ω—ã–µ —É—Ä–æ–≤–Ω–∏, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –î–∞–ª–µ–µ",
                             reply_markup=markup)
        else:
            for i in range(len(config.user_params)):
                if not shelve_tool.exist_shelve(config.user_params[i] + ".db", str(message.chat.id)):
                    if message.text != "–î–∞–ª–µ–µ":
                        shelve_tool.set_shelve(config.user_params[i] + '.db', str(message.chat.id), message.text)
                    if i == 0:
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
                        markup.row("9", "10", "11")
                        bot.send_message(message.chat.id, config.bot_words[i], reply_markup=markup)
                    elif i == 1:
                        bot.send_message(message.chat.id, config.bot_words[i], reply_markup=None)
                    elif i == 2:
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
                        markup.row("1 —É—Ä–æ–≤–µ–Ω—å", "2 —É—Ä–æ–≤–µ–Ω—å", "3 —É—Ä–æ–≤–µ–Ω—å")
                        markup.add("–í–°–û–®")
                        bot.send_message(message.chat.id, config.bot_words[i], reply_markup=markup)
                    elif i == 4:
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
                        for j in range(0, len(config.subjects) - 1, 2):
                            markup.row(config.subjects[j], config.subjects[j + 1])
                        markup.row(config.subjects[-1])
                        bot.send_message(message.chat.id, config.bot_words[i - 1], reply_markup=markup)
                    elif i == 5 and message.text == '–î–∞–ª–µ–µ':
                        bot.send_message(message.chat.id, config.bot_words[i - 1], reply_markup=None)
                    elif i == 5:
                        db.insert_user(message.chat.id, shelve_tool.get_shelve("Name.db", str(message.chat.id)),
                                       shelve_tool.get_shelve("class.db", str(message.chat.id)),
                                       shelve_tool.get_shelve("Location.db", str(message.chat.id)),
                                       shelve_tool.get_shelve("Levels.db", str(message.chat.id)),
                                       shelve_tool.get_shelve("Subjects.db", str(message.chat.id)),
                                       shelve_tool.get_shelve("School.db", str(message.chat.id)))

                        with open("subjects.json", "r") as file:
                            data = json.load(file)
                            for subj in shelve_tool.get_shelve("Subjects.db", str(message.chat.id)).split(', '):
                                data[subj].append(message.chat.id)
                        with open("subjects.json", "w") as file:
                            json.dump(data, file)

                        shelve_tool.set_shelve("mode.db", str(message.chat.id), 2)
                        markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
                        subj = db.get_user_info(message.chat.id)[5].split(", ")
                        for j in range(len(subj)):
                            if j % 3 != 2:
                                markup.row(subj[j])
                            else:
                                markup.add(subj[j])
                        bot.send_message(message.chat.id, "–í—ã–±–æ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –æ–ª–∏–º–ø–∏–∞–¥ \n "
                                                          "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –æ–ª–∏–º–ø–∏–∞–¥—ã", reply_markup=markup)

                    break
    elif shelve_tool.get_shelve("mode.db", str(message.chat.id)) == 2:
        if message.text in db.get_user_info(message.chat.id)[5].split(", "):
            subs = db.get_suboly(message.text)
            a = []
            for i in subs:
                a.append(str(i[3]))
            markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup1.row("–ù–∞–∑–∞–¥", "–î–∞–ª–µ–µ")
            markup1.add("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø—Ä–µ–¥–º–µ—Ç")
            markup1.add("–ó–∞–≤–µ—Ä—à–∏—Ç—å")
            bot.send_message(message.chat.id, "–û–ª–∏–º–ø–∏–∞–¥—ã –ø–æ " + message.text, reply_markup=markup1)
            shelve_tool.set_shelve("oly2.db", str(message.chat.id), ' '.join(a))
            shelve_tool.set_shelve("oly2ind.db", str(message.chat.id), '0')
            olymp = db.get_oly(shelve_tool.get_shelve("oly2.db", str(message.chat.id)).split()[0])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileO")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addO")))
            bot.send_message(message.chat.id, "üèÜ–û–ª–∏–º–ø–∏–∞–¥–∞üèÜ\n\n" + olymp[1] + '\n' + "–ü—Ä–µ–¥–º–µ—Ç: " + olymp[2],
                             reply_markup=markup)
        elif message.text == "–î–∞–ª–µ–µ":
            index = (int(shelve_tool.get_shelve("oly2ind.db", str(message.chat.id))) + 1) % \
                    len(shelve_tool.get_shelve("oly2.db", str(message.chat.id)).split(' '))
            shelve_tool.set_shelve("oly2ind.db", str(message.chat.id), str(index))
            olymp = db.get_oly(shelve_tool.get_shelve("oly2.db", str(message.chat.id)).split()[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileO")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addO")))
            bot.send_message(message.chat.id, "üèÜ–û–ª–∏–º–ø–∏–∞–¥–∞üèÜ\n\n" + olymp[1] + '\n' + "–ü—Ä–µ–¥–º–µ—Ç: " + olymp[2],
                             reply_markup=markup)
        elif message.text == "–ù–∞–∑–∞–¥":
            index = int(shelve_tool.get_shelve("oly2ind.db", str(message.chat.id)))
            if index == 0:
                index = len(shelve_tool.get_shelve("oly2.db", str(message.chat.id)).split(' ')) - 1
            else:
                index -= 1
            olymp = db.get_oly(shelve_tool.get_shelve("oly2.db", str(message.chat.id)).split()[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileO")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addO")))
            bot.send_message(message.chat.id, "üèÜ–û–ª–∏–º–ø–∏–∞–¥–∞üèÜ\n\n" + olymp[1] + '\n' + "–ü—Ä–µ–¥–º–µ—Ç: " + olymp[2],
                             reply_markup=markup)
        elif message.text == "–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø—Ä–µ–¥–º–µ—Ç":
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            subj = db.get_user_info(message.chat.id)[5].split(", ")
            for i in range(len(subj)):
                if i % 3 != 2:
                    markup.row(subj[i])
                else:
                    markup.add(subj[i])
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –æ–ª–∏–º–ø–∏–∞–¥—ã", reply_markup=markup)
        elif message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å":
            if shelve_tool.exist_shelve("prefers.db", str(message.chat.id)):
                shelve_tool.set_shelve("mode.db", str(message.chat.id), 3)
                markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
                markup.row("–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è")
                markup.row("–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è", "–°–æ—Ü-—ç–∫–æ–Ω–æ–º")
                bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å –í–£–ó–∞", reply_markup=markup)
            else:
                bot.send_message(message.chat.id, "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–µ –æ–¥–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã.")

    elif shelve_tool.get_shelve("mode.db", str(message.chat.id)) == 3:
        if message.text in config.directions:
            subs = db.get_diruny(message.text)
            a = []
            for i in subs:
                a.append(str(i[0]))
            markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup1.row("–ù–∞–∑–∞–¥", "–î–∞–ª–µ–µ")
            markup1.add("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å")
            markup1.add("–ó–∞–≤–µ—Ä—à–∏—Ç—å")
            bot.send_message(message.chat.id, "–í–£–ó—ã —Å " + message.text[:-2] + "–æ–π –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å—é",
                             reply_markup=markup1)
            shelve_tool.set_shelve("uny2.db", str(message.chat.id), ' '.join(a))
            shelve_tool.set_shelve("uny2ind.db", str(message.chat.id), '0')
            uny = db.get_univer(shelve_tool.get_shelve("uny2.db", str(message.chat.id)).split()[0])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileY")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addY")))
            bot.send_message(message.chat.id, "üè´–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Çüè´ \n\n" + uny[1] + "\n" + "–ì–æ—Ä–æ–¥: " + uny[2] + '\n' + uny[6] +
                             " –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å", reply_markup=markup)
        elif message.text == "–î–∞–ª–µ–µ":
            index = (int(shelve_tool.get_shelve("uny2ind.db", str(message.chat.id))) + 1) % \
                    len(shelve_tool.get_shelve("uny2.db", str(message.chat.id)).split(' '))
            shelve_tool.set_shelve("uny2ind.db", str(message.chat.id), str(index))
            uny = db.get_univer(shelve_tool.get_shelve("uny2.db", str(message.chat.id)).split()[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileY")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addY")))
            bot.send_message(message.chat.id,
                             "üè´–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Çüè´ \n\n" + uny[1] + "\n" + "–ì–æ—Ä–æ–¥: " + uny[2] + '\n' + uny[6] +
                             " –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å", reply_markup=markup)
        elif message.text == "–ù–∞–∑–∞–¥":
            index = int(shelve_tool.get_shelve("uny2ind.db", str(message.chat.id)))
            if index == 0:
                index = len(shelve_tool.get_shelve("uny2.db", str(message.chat.id)).split(' ')) - 1
            else:
                index -= 1
            shelve_tool.set_shelve("uny2ind.db", str(message.chat.id), str(index))
            uny = db.get_univer(shelve_tool.get_shelve("uny2.db", str(message.chat.id)).split()[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileY")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addY")))
            bot.send_message(message.chat.id,
                             "üè´–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Çüè´ \n\n" + uny[1] + "\n" + "–ì–æ—Ä–æ–¥: " + uny[2] + '\n' + uny[6] +
                             " –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å", reply_markup=markup)
        elif message.text == "–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å":
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.row("–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è")
            markup.row("–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è", "–°–æ—Ü-—ç–∫–æ–Ω–æ–º")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å –í–£–ó–∞", reply_markup=markup)
        elif message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å":
            if shelve_tool.get_shelve("prefers1.db", str(message.chat.id)):
                shelve_tool.set_shelve("mode.db", str(message.chat.id), 4)
                with open("dateOfOli.json", 'r') as file:
                    data = json.load(file)
                for i in shelve_tool.get_shelve("prefers.db", str(message.chat.id)).split(', '):
                    data[i].append(message.chat.id)
                with open("dateOfOli.json", 'w') as file:
                    json.dump(data, file)
                db.insert_prefers(str(message.chat.id), shelve_tool.get_shelve("prefers.db", str(message.chat.id)),
                                  shelve_tool.get_shelve("prefers1.db", str(message.chat.id)))
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup.row("–ü—Ä–æ—Ñ–∏–ª—å", "–û–ª–∏–º–ø–∏–∞–¥—ã –∏ –í–£–ó—ã")
                markup.row("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
                bot.send_message(message.chat.id, "–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–æ—Ñ–∏–ª—è –∑–∞–∫–æ–Ω–µ—á–µ–Ω–∞!", reply_markup=markup)
            else:
                bot.send_message(message.chat.id, "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–≥–æ —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞")
    elif shelve_tool.get_shelve("mode.db", str(message.chat.id)) == 4:
        if message.text == "–ü—Ä–æ—Ñ–∏–ª—å":
            row = db.get_user_info(str(message.chat.id))
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row("–ù–∞–∑–∞–¥", "–ò–∑–º–µ–Ω–∏—Ç—å")
            bot.send_message(message.chat.id, "–§–ò–û: " + row[1] + '\n' + "–ö–ª–∞—Å—Å " + str(row[2]) + '\n' + "–ì–æ—Ä–æ–¥: " +
                             row[3] + "\n" + "–ü—Ä–µ–¥–º–µ—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥: " + row[5] + '\n' + "–®–∫–æ–ª–∞: " + row[6],
                             reply_markup=markup)
            shelve_tool.set_shelve("mode.db", str(message.chat.id), 5)
        elif message.text == "–û–ª–∏–º–ø–∏–∞–¥—ã –∏ –í–£–ó—ã":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row("–û–ª–∏–º–ø–∏–∞–¥—ã", "–í—É–∑—ã")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å", reply_markup=markup)
        elif message.text == "–û–ª–∏–º–ø–∏–∞–¥—ã":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row("–ú–æ–∏ –æ–ª–∏–º–ø–∏–∞–¥—ã", "–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–µ –æ–ª–∏–º–ø–∏–∞–¥—ã")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å", reply_markup=markup)
        elif message.text == "–í—É–∑—ã":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row("–ú–æ–∏ –í–£–ó—ã", "–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–µ –í–£–ó—ã")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å", reply_markup=markup)
        elif message.text == "–ú–æ–∏ –æ–ª–∏–º–ø–∏–∞–¥—ã":
            shelve_tool.set_shelve("mode.db", str(message.chat.id), 6)
            olymps = db.get_prefers(str(message.chat.id))[1]
            if olymps != "":
                shelve_tool.set_shelve("oly3.db", str(message.chat.id), olymps)
                shelve_tool.set_shelve("oly3ind.db", str(message.chat.id), 0)
                markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup1.row("–ù–∞–∑–∞–¥", "–î–∞–ª–µ–µ")
                markup1.add("–ó–∞–≤–µ—Ä—à–∏—Ç—å")
                bot.send_message(message.chat.id, "–ú–æ–∏ –æ–ª–∏–º–ø–∏–∞–¥—ã", reply_markup=markup1)
                olymp = db.get_oly(shelve_tool.get_shelve("oly3.db", str(message.chat.id)).split(', ')[0])
                markup = types.InlineKeyboardMarkup()
                markup.add((types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data="delO")))
                bot.send_message(message.chat.id, "üèÜ–û–ª–∏–º–ø–∏–∞–¥–∞üèÜ\n\n" + olymp[1] + '\n' + "–ü—Ä–µ–¥–º–µ—Ç: " + olymp[2],
                                 reply_markup=markup)
            else:
                bot.send_message(message.chat.id, "–í—ã –Ω–µ –≤—ã–±—Ä–∞–ª–∏ –Ω–∏ –æ–¥–Ω–æ–π –æ–ª–∏–º–ø–∏–∞–¥—ã")
                markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
                markup.row("–ü—Ä–æ—Ñ–∏–ª—å", "–û–ª–∏–º–ø–∏–∞–¥—ã –∏ –í–£–ó—ã")
                markup.row("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
                bot.send_message(message.chat.id, "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ", reply_markup=markup)
                shelve_tool.set_shelve("mode.db", str(message.chat.id), 4)
        elif message.text == "–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–µ –æ–ª–∏–º–ø–∏–∞–¥—ã":
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            subj = db.get_user_info(message.chat.id)[5].split(", ")
            for j in range(len(subj)):
                if j % 3 != 2:
                    markup.row(subj[j])
                else:
                    markup.add(subj[j])
            bot.send_message(message.chat.id, "–í—ã–±–æ—Ä –æ—Ç—Å–ª–µ–∂–∏–≤–∞–µ–º—ã—Ö –æ–ª–∏–º–ø–∏–∞–¥ \n "
                                              "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –æ–ª–∏–º–ø–∏–∞–¥—ã", reply_markup=markup)
            shelve_tool.set_shelve("mode.db", str(message.chat.id), 7)
        elif message.text == "–ú–æ–∏ –í–£–ó—ã":
            shelve_tool.set_shelve("mode.db", str(message.chat.id), 8)
            unys = db.get_prefers(str(message.chat.id))[2]
            shelve_tool.set_shelve("uny3.db", str(message.chat.id), unys)
            shelve_tool.set_shelve("uny3ind.db", str(message.chat.id), 0)
            markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup1.row("–ù–∞–∑–∞–¥", "–î–∞–ª–µ–µ")
            markup1.add("–ó–∞–≤–µ—Ä—à–∏—Ç—å")
            bot.send_message(message.chat.id, "–ú–æ–∏ –í—É–∑—ã", reply_markup=markup1)
            uny = db.get_univer(shelve_tool.get_shelve("uny3.db", str(message.chat.id)).split(', ')[0])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data="delY")))
            bot.send_message(message.chat.id,
                             "üè´–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Çüè´ \n\n" + uny[1] + "\n" + "–ì–æ—Ä–æ–¥: " + uny[2] + '\n' + uny[6] +
                             " –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å", reply_markup=markup)
        elif message.text == "–í—ã–±—Ä–∞—Ç—å –Ω–æ–≤—ã–µ –í–£–ó—ã":
            shelve_tool.set_shelve("mode.db", str(message.chat.id), 9)
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.row("–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è")
            markup.row("–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è", "–°–æ—Ü-—ç–∫–æ–Ω–æ–º")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å –í–£–ó–∞", reply_markup=markup)
    elif shelve_tool.get_shelve("mode.db", str(message.chat.id)) == 5:
        if message.text == "–ò–∑–º–µ–Ω–∏—Ç—å":
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            markup.row("–§–ò–û", "–ö–ª–∞—Å—Å", "–ì–æ—Ä–æ–¥")
            markup.row("–ü—Ä–µ–¥–º–µ—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥", "–®–∫–æ–ª–∞", "–ù–∞–∑–∞–¥")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å", reply_markup=markup)
        elif message.text == "–§–ò–û":
            shelve_tool.set_shelve("change.db", str(message.chat.id), 1)
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –§–ò–û —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª")
        elif message.text == "–ö–ª–∞—Å—Å":
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.row("9", "10", "11")
            shelve_tool.set_shelve("change.db", str(message.chat.id), 2)
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à –∫–ª–∞—Å—Å", reply_markup=markup)
        elif message.text == "–ì–æ—Ä–æ–¥":
            shelve_tool.set_shelve("change.db", str(message.chat.id), 3)
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –≥–æ—Ä–æ–¥")
        elif message.text == "–ü—Ä–µ–¥–º–µ—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥":
            shelve_tool.set_shelve("change.db", str(message.chat.id), 4)
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            for j in range(0, len(config.subjects) - 1, 2):
                markup.row(config.subjects[j], config.subjects[j + 1])
            markup.row(config.subjects[-1])
            shelve_tool.del_shelve("Subjects.db", str(message.chat.id))
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥", reply_markup=markup)
        elif message.text in config.subjects:
            if shelve_tool.exist_shelve("Subjects.db", str(message.chat.id)):
                if message.text not in shelve_tool.get_shelve("Subjects.db", str(message.chat.id)):
                    shelve_tool.set_shelve("Subjects.db", str(message.chat.id), shelve_tool.get_shelve("Subjects.db",
                                           str(message.chat.id)) + ", " + message.text)
            else:
                shelve_tool.set_shelve("Subjects.db", str(message.chat.id), message.text)
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            for j in range(0, len(config.subjects) - 1, 2):
                markup.row(config.subjects[j], config.subjects[j + 1])
            markup.row(config.subjects[-1])
            markup.add("–ó–∞–∫–æ–Ω—á–∏—Ç—å")
            bot.send_message(message.chat.id, "–ï—Å–ª–∏ –≤—ã –≤—ã–±—Ä–∞–ª–∏ –Ω—É–∂–Ω—ã–µ –ø—Ä–µ–¥–º–µ—Ç—ã, —Ç–æ –Ω–∞–∂–º–∏—Ç–µ –ó–∞–∫–æ–Ω—á–∏—Ç—å",
                             reply_markup=markup)
        elif message.text == "–®–∫–æ–ª–∞":
            shelve_tool.set_shelve("change.db", str(message.chat.id), 5)
            bot.send_message(message.chat.id, "–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–π —à–∫–æ–ª—ã")
        elif message.text == "–ó–∞–∫–æ–Ω—á–∏—Ç—å":
            row = db.get_user_info(str(message.chat.id))
            db.delete_user(str(message.chat.id))
            db.insert_user(row[0], row[1], row[2], row[3], row[4], shelve_tool.get_shelve("Subjects.db",
                                                                                          str(message.chat.id)), row[6])
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            markup.row("–§–ò–û", "–ö–ª–∞—Å—Å", "–ì–æ—Ä–æ–¥")
            markup.row("–ü—Ä–µ–¥–º–µ—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥", "–®–∫–æ–ª–∞", "–ù–∞–∑–∞–¥")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å", reply_markup=markup)
        elif message.text == "–ù–∞–∑–∞–¥":
            shelve_tool.set_shelve("mode.db", str(message.chat.id), 4)
            with open("dateOfOli.json", 'r') as file:
                data = json.load(file)
            for i in shelve_tool.get_shelve("prefers.db", str(message.chat.id)).split(', '):
                data[i].append(message.chat.id)
            with open("dateOfOli.json", 'w') as file:
                json.dump(data, file)
            db.insert_prefers(str(message.chat.id), shelve_tool.get_shelve("prefers.db", str(message.chat.id)),
                              shelve_tool.get_shelve("prefers1.db", str(message.chat.id)))
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row("–ü—Ä–æ—Ñ–∏–ª—å", "–û–ª–∏–º–ø–∏–∞–¥—ã –∏ –í–£–ó—ã")
            markup.row("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            bot.send_message(message.chat.id, "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ", reply_markup=markup)
        else:
            if shelve_tool.get_shelve("change.db", str(message.chat.id)) == 1:
                row = db.get_user_info(str(message.chat.id))
                db.delete_user(str(message.chat.id))
                db.insert_user(row[0], message.text, row[2], row[3], row[4], row[5], row[6])
            elif shelve_tool.get_shelve("change.db", str(message.chat.id)) == 2:
                row = db.get_user_info(str(message.chat.id))
                db.delete_user(str(message.chat.id))
                db.insert_user(row[0], row[1], message.text, row[3], row[4], row[5], row[6])
            elif shelve_tool.get_shelve("change.db", str(message.chat.id)) == 3:
                row = db.get_user_info(str(message.chat.id))
                db.delete_user(str(message.chat.id))
                db.insert_user(row[0], row[1], row[2], message.text, row[4], row[5], row[6])
            elif shelve_tool.get_shelve("change.db", str(message.chat.id)) == 5:
                row = db.get_user_info(str(message.chat.id))
                db.delete_user(str(message.chat.id))
                db.insert_user(row[0], row[1], row[2], row[3], row[4], row[5], message.text)
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
            markup.row("–§–ò–û", "–ö–ª–∞—Å—Å", "–ì–æ—Ä–æ–¥")
            markup.row("–ü—Ä–µ–¥–º–µ—Ç—ã –æ–ª–∏–º–ø–∏–∞–¥", "–®–∫–æ–ª–∞", "–ù–∞–∑–∞–¥")
            bot.send_message(message.chat.id, "–ò–∑–º–µ–Ω–µ–Ω–∏—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. \n –í—ã–±–µ—Ä–∏—Ç–µ, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ –ù–∞–∑–∞–¥",
                             reply_markup=markup)
    elif shelve_tool.get_shelve("mode.db", str(message.chat.id)) == 6:
        if message.text == "–î–∞–ª–µ–µ":
            index = (int(shelve_tool.get_shelve("oly3ind.db", str(message.chat.id))) + 1) % \
                    len(shelve_tool.get_shelve("oly3.db", str(message.chat.id)).split(', '))
            shelve_tool.set_shelve("oly3ind.db", str(message.chat.id), str(index))
            olymp = db.get_oly(shelve_tool.get_shelve("oly3.db", str(message.chat.id)).split(', ')[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data="delO")))
            bot.send_message(message.chat.id, "üèÜ–û–ª–∏–º–ø–∏–∞–¥–∞üèÜ\n\n" + olymp[1] + '\n' + "–ü—Ä–µ–¥–º–µ—Ç: " + olymp[2],
                             reply_markup=markup)
        elif message.text == "–ù–∞–∑–∞–¥":
            index = int(shelve_tool.get_shelve("oly3ind.db", str(message.chat.id)))
            if index == 0:
                index = len(shelve_tool.get_shelve("oly3.db", str(message.chat.id)).split(', ')) - 1
            else:
                index -= 1
            shelve_tool.set_shelve("oly3ind.db", str(message.chat.id), str(index))
            olymp = db.get_oly(shelve_tool.get_shelve("oly3.db", str(message.chat.id)).split(', ')[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data="delO")))
            bot.send_message(message.chat.id, "üèÜ–û–ª–∏–º–ø–∏–∞–¥–∞üèÜ\n\n" + olymp[1] + '\n' + "–ü—Ä–µ–¥–º–µ—Ç: " + olymp[2],
                             reply_markup=markup)
        elif message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å":
            row = db.get_prefers(str(message.chat.id))
            db.del_prefers(str(message.chat.id))
            with open("dateOfOli.json", 'r') as file:
                data = json.load(file)
            for i in shelve_tool.get_shelve("oly3.db", str(message.chat.id)).split(', '):
                data[i].append(message.chat.id)
            with open("dateOfOli.json", 'w') as file:
                json.dump(data, file)
            db.insert_prefers(str(message.chat.id), shelve_tool.get_shelve('oly3.db', str(message.chat.id)), row[2])
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row("–ü—Ä–æ—Ñ–∏–ª—å", "–û–ª–∏–º–ø–∏–∞–¥—ã –∏ –í–£–ó—ã")
            markup.row("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            bot.send_message(message.chat.id, "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ", reply_markup=markup)
            shelve_tool.set_shelve("mode.db", str(message.chat.id), 4)
    elif shelve_tool.get_shelve("mode.db", str(message.chat.id)) == 7:
        if message.text in config.subjects:
            shelve_tool.del_shelve("prefers.db", str(message.chat.id))
            subs = db.get_suboly(message.text)
            a = []
            for i in subs:
                a.append(str(i[3]))
            markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup1.row("–ù–∞–∑–∞–¥", "–î–∞–ª–µ–µ")
            markup1.add("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø—Ä–µ–¥–º–µ—Ç")
            markup1.add("–ó–∞–≤–µ—Ä—à–∏—Ç—å")
            bot.send_message(message.chat.id, "–û–ª–∏–º–ø–∏–∞–¥—ã –ø–æ " + message.text, reply_markup=markup1)
            shelve_tool.set_shelve("oly2.db", str(message.chat.id), ' '.join(a))
            shelve_tool.set_shelve("oly2ind.db", str(message.chat.id), '0')
            olymp = db.get_oly(shelve_tool.get_shelve("oly2.db", str(message.chat.id)).split()[0])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileO")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addO")))
            bot.send_message(message.chat.id, "üèÜ–û–ª–∏–º–ø–∏–∞–¥–∞üèÜ\n\n" + olymp[1] + '\n' + "–ü—Ä–µ–¥–º–µ—Ç: " + olymp[2],
                             reply_markup=markup)
        elif message.text == "–î–∞–ª–µ–µ":
            index = (int(shelve_tool.get_shelve("oly2ind.db", str(message.chat.id))) + 1) % \
                    len(shelve_tool.get_shelve("oly2.db", str(message.chat.id)).split(' '))
            shelve_tool.set_shelve("oly2ind.db", str(message.chat.id), str(index))
            olymp = db.get_oly(shelve_tool.get_shelve("oly2.db", str(message.chat.id)).split()[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileO")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addO")))
            bot.send_message(message.chat.id, "üèÜ–û–ª–∏–º–ø–∏–∞–¥–∞üèÜ\n\n" + olymp[1] + '\n' + "–ü—Ä–µ–¥–º–µ—Ç: " + olymp[2],
                             reply_markup=markup)
        elif message.text == "–ù–∞–∑–∞–¥":
            index = int(shelve_tool.get_shelve("oly2ind.db", str(message.chat.id)))
            if index == 0:
                index = len(shelve_tool.get_shelve("oly2.db", str(message.chat.id)).split(' ')) - 1
            else:
                index -= 1
            olymp = db.get_oly(shelve_tool.get_shelve("oly2.db", str(message.chat.id)).split()[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileO")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addO")))
            bot.send_message(message.chat.id, "üèÜ–û–ª–∏–º–ø–∏–∞–¥–∞üèÜ\n\n" + olymp[1] + '\n' + "–ü—Ä–µ–¥–º–µ—Ç: " + olymp[2],
                             reply_markup=markup)
        elif message.text == "–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π –ø—Ä–µ–¥–º–µ—Ç":
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            subj = db.get_user_info(message.chat.id)[5].split(", ")
            for i in range(len(subj)):
                if i % 3 != 2:
                    markup.row(subj[i])
                else:
                    markup.add(subj[i])
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –ø—Ä–µ–¥–º–µ—Ç –æ–ª–∏–º–ø–∏–∞–¥—ã", reply_markup=markup)
        elif message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å":
            row = db.get_prefers(str(message.chat.id))
            db.del_prefers(str(message.chat.id))
            db.insert_prefers(str(message.chat.id), row[1] +
                              ', ' + shelve_tool.get_shelve('prefers.db', str(message.chat.id)), row[2])
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row("–ü—Ä–æ—Ñ–∏–ª—å", "–û–ª–∏–º–ø–∏–∞–¥—ã –∏ –í–£–ó—ã")
            markup.row("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            bot.send_message(message.chat.id, "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ", reply_markup=markup)
            shelve_tool.set_shelve("mode.db", str(message.chat.id), 4)
    elif shelve_tool.get_shelve("mode.db", str(message.chat.id)) == 8:
        if message.text == "–î–∞–ª–µ–µ":
            index = (int(shelve_tool.get_shelve("uny3ind.db", str(message.chat.id))) + 1) % \
                    len(shelve_tool.get_shelve("uny3.db", str(message.chat.id)).split(', '))
            shelve_tool.set_shelve("uny3ind.db", str(message.chat.id), str(index))
            uny = db.get_univer(shelve_tool.get_shelve("uny3.db", str(message.chat.id)).split(', ')[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data="delY")))
            bot.send_message(message.chat.id,
                             "üè´–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Çüè´ \n\n" + uny[1] + "\n" + "–ì–æ—Ä–æ–¥: " + uny[2] + '\n' + uny[6] +
                             " –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å", reply_markup=markup)
        elif message.text == "–ù–∞–∑–∞–¥":
            index = int(shelve_tool.get_shelve("uny3ind.db", str(message.chat.id)))
            if index == 0:
                index = len(shelve_tool.get_shelve("uny3.db", str(message.chat.id)).split(', ')) - 1
            else:
                index -= 1
            shelve_tool.set_shelve("uny3ind.db", str(message.chat.id), str(index))
            uny = db.get_univer(shelve_tool.get_shelve("uny3.db", str(message.chat.id)).split(', ')[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–£–¥–∞–ª–∏—Ç—å", callback_data="delY")))
            bot.send_message(message.chat.id,
                             "üè´–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Çüè´ \n\n" + uny[1] + "\n" + "–ì–æ—Ä–æ–¥: " + uny[2] + '\n' + uny[6] +
                             " –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å", reply_markup=markup)
        elif message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å":
            row = db.get_prefers(str(message.chat.id))
            db.del_prefers(str(message.chat.id))
            db.insert_prefers(str(message.chat.id), row[1], shelve_tool.get_shelve('uny3.db', str(message.chat.id)))
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row("–ü—Ä–æ—Ñ–∏–ª—å", "–û–ª–∏–º–ø–∏–∞–¥—ã –∏ –í–£–ó—ã")
            markup.row("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            bot.send_message(message.chat.id, "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ", reply_markup=markup)
            shelve_tool.set_shelve("mode.db", str(message.chat.id), 4)
    elif shelve_tool.get_shelve("mode.db", str(message.chat.id)) == 9:
        if message.text in config.directions:
            subs = db.get_diruny(message.text)
            shelve_tool.del_shelve("prefers1.db", str(message.chat.id))
            a = []
            for i in subs:
                a.append(str(i[0]))
            markup1 = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup1.row("–ù–∞–∑–∞–¥", "–î–∞–ª–µ–µ")
            markup1.add("–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å")
            markup1.add("–ó–∞–≤–µ—Ä—à–∏—Ç—å")
            bot.send_message(message.chat.id, "–í–£–ó—ã —Å " + message.text[:-2] + "–æ–π –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å—é",
                             reply_markup=markup1)
            shelve_tool.set_shelve("uny2.db", str(message.chat.id), ' '.join(a))
            shelve_tool.set_shelve("uny2ind.db", str(message.chat.id), '0')
            uny = db.get_univer(shelve_tool.get_shelve("uny2.db", str(message.chat.id)).split()[0])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileY")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addY")))
            bot.send_message(message.chat.id,
                             "üè´–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Çüè´ \n\n" + uny[1] + "\n" + "–ì–æ—Ä–æ–¥: " + uny[2] + '\n' + uny[6] +
                             " –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å", reply_markup=markup)
        elif message.text == "–î–∞–ª–µ–µ":
            index = (int(shelve_tool.get_shelve("uny2ind.db", str(message.chat.id))) + 1) % \
                    len(shelve_tool.get_shelve("uny2.db", str(message.chat.id)).split(' '))
            shelve_tool.set_shelve("uny2ind.db", str(message.chat.id), str(index))
            uny = db.get_univer(shelve_tool.get_shelve("uny2.db", str(message.chat.id)).split()[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileY")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addY")))
            bot.send_message(message.chat.id,
                             "üè´–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Çüè´ \n\n" + uny[1] + "\n" + "–ì–æ—Ä–æ–¥: " + uny[2] + '\n' + uny[6] +
                             " –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å", reply_markup=markup)
        elif message.text == "–ù–∞–∑–∞–¥":
            index = int(shelve_tool.get_shelve("uny2ind.db", str(message.chat.id)))
            if index == 0:
                index = len(shelve_tool.get_shelve("uny2.db", str(message.chat.id)).split(' ')) - 1
            else:
                index -= 1
            shelve_tool.set_shelve("uny2ind.db", str(message.chat.id), str(index))
            uny = db.get_univer(shelve_tool.get_shelve("uny2.db", str(message.chat.id)).split()[index])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="profileY")))
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addY")))
            bot.send_message(message.chat.id,
                             "üè´–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Çüè´ \n\n" + uny[1] + "\n" + "–ì–æ—Ä–æ–¥: " + uny[2] + '\n' + uny[6] +
                             " –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å", reply_markup=markup)
        elif message.text == "–í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å":
            markup = types.ReplyKeyboardMarkup(one_time_keyboard=True, resize_keyboard=True)
            markup.row("–ì—É–º–∞–Ω–∏—Ç–∞—Ä–Ω–∞—è", "–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è")
            markup.row("–ú–µ–¥–∏—Ü–∏–Ω—Å–∫–∞—è", "–°–æ—Ü-—ç–∫–æ–Ω–æ–º")
            bot.send_message(message.chat.id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å –í–£–ó–∞", reply_markup=markup)
        elif message.text == "–ó–∞–≤–µ—Ä—à–∏—Ç—å":
            row = db.get_prefers(str(message.chat.id))
            db.del_prefers(str(message.chat.id))
            db.insert_prefers(str(message.chat.id), row[1],
                              row[2] + ', ' + shelve_tool.get_shelve('prefers1.db', str(message.chat.id)))
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            markup.row("–ü—Ä–æ—Ñ–∏–ª—å", "–û–ª–∏–º–ø–∏–∞–¥—ã –∏ –í–£–ó—ã")
            markup.row("–ò–∑–±—Ä–∞–Ω–Ω–æ–µ", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è")
            bot.send_message(message.chat.id, "–°–æ—Ö—Ä–∞–Ω–µ–Ω–æ", reply_markup=markup)
            shelve_tool.set_shelve("mode.db", str(message.chat.id), 4)


@bot.callback_query_handler(func=lambda call: True)
def callback_inline(call):
    # –ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —á–∞—Ç–∞ —Å –±–æ—Ç–æ–º
    if call.message:
        if call.data == "profileO":
            olymp = db.get_oly(shelve_tool.get_shelve("oly2.db", str(call.message.chat.id)).split()[
                                   int(shelve_tool.get_shelve("oly2ind.db", str(call.message.chat.id)))])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addO")))
            markup.add((types.InlineKeyboardButton(text="–°–∞–π—Ç –æ–ª–∏–º–ø–∏–∞–¥—ã", url=olymp[4])))
            markup.add((types.InlineKeyboardButton(text="–û—Ü–µ–Ω–∏—Ç—å –æ–ª–∏–º–ø–∏–∞–¥—É", callback_data="rateO")))
            q = ''
            if olymp[5] != "ab":
                q = "\n\n" + olymp[5]
            bot.send_message(call.message.chat.id, "üèÜ–û–ª–∏–º–ø–∏–∞–¥–∞üèÜ\n\n" + olymp[1] + '\n' + "–ü—Ä–µ–¥–º–µ—Ç: " + olymp[2]
                             + q, reply_markup=markup)
        elif call.data == "addO":
            if shelve_tool.exist_shelve("prefers.db", str(call.message.chat.id)):
                shelve_tool.set_shelve("prefers.db", str(call.message.chat.id), shelve_tool.get_shelve("prefers.db",
                                       str(call.message.chat.id)) + ", " +
                                       shelve_tool.get_shelve("oly2.db", str(call.message.chat.id)).split()[
                                           int(shelve_tool.get_shelve("oly2ind.db", str(call.message.chat.id)))])
            else:
                shelve_tool.set_shelve("prefers.db", str(call.message.chat.id),
                                       shelve_tool.get_shelve("oly2.db", str(call.message.chat.id)).split()[
                                           int(shelve_tool.get_shelve("oly2ind.db", str(call.message.chat.id)))])
        elif call.data == "rateO":
            pass
        elif call.data == 'profileY':
            uny = db.get_univer(shelve_tool.get_shelve("uny2.db", str(call.message.chat.id)).split()[
                                   int(shelve_tool.get_shelve("uny2ind.db", str(call.message.chat.id)))])
            markup = types.InlineKeyboardMarkup()
            markup.add((types.InlineKeyboardButton(text="–û—Ç—Å–ª–µ–∂–∏–≤–∞—Ç—å", callback_data="addY")))
            markup.add((types.InlineKeyboardButton(text="–°–∞–π—Ç —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞", url=uny[4])))
            bot.send_message(call.message.chat.id, "üè´–£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Çüè´ \n\n" + uny[1] + '\n' "–ì–æ—Ä–æ–¥: " + uny[2] + '\n' + uny[6] +
                             " –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ—Å—Ç—å\n\n" + uny[5], reply_markup=markup)
        elif call.data == "addY":
            if shelve_tool.exist_shelve("prefers1.db", str(call.message.chat.id)):
                shelve_tool.set_shelve("prefers1.db", str(call.message.chat.id), shelve_tool.get_shelve("prefers1.db",
                                       str(call.message.chat.id)) + ", " +
                                       shelve_tool.get_shelve("uny2.db", str(call.message.chat.id)).split()[
                                           int(shelve_tool.get_shelve("uny2ind.db", str(call.message.chat.id)))])
            else:
                shelve_tool.set_shelve("prefers1.db", str(call.message.chat.id),
                                       shelve_tool.get_shelve("uny2.db", str(call.message.chat.id)).split()[
                                           int(shelve_tool.get_shelve("uny2ind.db", str(call.message.chat.id)))])
        elif call.data == "delO":
            olymps = shelve_tool.get_shelve("oly3.db", str(call.message.chat.id)).split(', ')
            index = int(shelve_tool.get_shelve("oly3ind.db", str(call.message.chat.id)))
            if index != len(olymps) - 1 and index != 0:
                olymps = (' '.join(olymps[:index]) + ' ' + ' '.join(olymps[index + 1:])).split()
            elif index == 0:
                olymps = olymps[1:]
            else:
                olymps = olymps[:len(olymps) - 1]
            shelve_tool.set_shelve("oly3.db", str(call.message.chat.id), ', '.join(olymps))
            shelve_tool.set_shelve("oly3ind.db", str(call.message.chat.id), max([0, index - 1]))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–£–¥–∞–ª–µ–Ω–æ",
                                  reply_markup=None)
        elif call.data == "delY":
            unys = shelve_tool.get_shelve("uny3.db", str(call.message.chat.id)).split(', ')
            index = int(shelve_tool.get_shelve("uny3ind.db", str(call.message.chat.id)))
            if index != len(unys) - 1 and index != 0:
                unys = (' '.join(unys[:index]) + ' ' + ' '.join(unys[index + 1:])).split()
            elif index == 0:
                unys = unys[1:]
            else:
                unys = unys[:len(unys) - 1]
            shelve_tool.set_shelve("uny3.db", str(call.message.chat.id), ', '.join(unys))
            shelve_tool.set_shelve("uny3ind.db", str(call.message.chat.id), max([0, index - 1]))
            bot.edit_message_text(chat_id=call.message.chat.id, message_id=call.message.message_id, text="–£–¥–∞–ª–µ–Ω–æ",
                                  reply_markup=None)


if __name__ == '__main__':
    bot.infinity_polling()
